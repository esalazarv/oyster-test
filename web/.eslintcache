[{"/var/www/html/src/index.tsx":"1","/var/www/html/src/reportWebVitals.ts":"2","/var/www/html/src/App.tsx":"3","/var/www/html/src/store/store.ts":"4","/var/www/html/src/pages/layouts/MainLayout/MainLayout.tsx":"5","/var/www/html/src/pages/layouts/GuestLayout/GuestLayout.tsx":"6","/var/www/html/src/pages/views/Login/Login.tsx":"7","/var/www/html/src/pages/views/Dashboard/Dashboard.tsx":"8","/var/www/html/src/pages/components/AppRoute/AppRoute.jsx":"9","/var/www/html/src/types/AppRouteProps.ts":"10","/var/www/html/src/pages/layouts/MainLayout/components/SideMenu/SideMenu.tsx":"11","/var/www/html/src/pages/layouts/MainLayout/components/NavBar/Navbar.tsx":"12","/var/www/html/src/services/AuthService.ts":"13","/var/www/html/src/services/AbstractService.ts":"14","/var/www/html/src/http/HttpClient.ts":"15","/var/www/html/src/http/middleware/AuthorizationMiddleware.js":"16","/var/www/html/src/http/AxiosBuilder.ts":"17","/var/www/html/src/helpers/Auth.ts":"18","/var/www/html/src/store/auth/actions.ts":"19","/var/www/html/src/config/index.ts":"20","/var/www/html/src/store/auth/reducer.ts":"21","/var/www/html/src/pages/views/FakeView/FakeView.tsx":"22"},{"size":501,"mtime":1608137563722,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1608137563725,"results":"25","hashOfConfig":"24"},{"size":1581,"mtime":1608164683465,"results":"26","hashOfConfig":"24"},{"size":586,"mtime":1608139781533,"results":"27","hashOfConfig":"24"},{"size":1228,"mtime":1608163841203,"results":"28","hashOfConfig":"24"},{"size":727,"mtime":1608146403986,"results":"29","hashOfConfig":"24"},{"size":4018,"mtime":1608161066041,"results":"30","hashOfConfig":"24"},{"size":231,"mtime":1608164778659,"results":"31","hashOfConfig":"24"},{"size":1075,"mtime":1608161979182,"results":"32","hashOfConfig":"24"},{"size":390,"mtime":1608137563725,"results":"33","hashOfConfig":"24"},{"size":1654,"mtime":1608148728571,"results":"34","hashOfConfig":"24"},{"size":1679,"mtime":1608164399559,"results":"35","hashOfConfig":"24"},{"size":233,"mtime":1608158374622,"results":"36","hashOfConfig":"24"},{"size":1382,"mtime":1608155096096,"results":"37","hashOfConfig":"24"},{"size":2785,"mtime":1608155096098,"results":"38","hashOfConfig":"24"},{"size":323,"mtime":1608154203439,"results":"39","hashOfConfig":"24"},{"size":580,"mtime":1608154668723,"results":"40","hashOfConfig":"24"},{"size":1219,"mtime":1608161808411,"results":"41","hashOfConfig":"24"},{"size":1270,"mtime":1608155872797,"results":"42","hashOfConfig":"24"},{"size":302,"mtime":1608158630496,"results":"43","hashOfConfig":"24"},{"size":1163,"mtime":1608152758437,"results":"44","hashOfConfig":"24"},{"size":330,"mtime":1608164749048,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"f95buf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/src/index.tsx",[],["94","95"],"/var/www/html/src/reportWebVitals.ts",[],"/var/www/html/src/App.tsx",["96"],"/var/www/html/src/store/store.ts",[],"/var/www/html/src/pages/layouts/MainLayout/MainLayout.tsx",["97"],"/var/www/html/src/pages/layouts/GuestLayout/GuestLayout.tsx",[],"/var/www/html/src/pages/views/Login/Login.tsx",[],"/var/www/html/src/pages/views/Dashboard/Dashboard.tsx",[],"/var/www/html/src/pages/components/AppRoute/AppRoute.jsx",[],"/var/www/html/src/types/AppRouteProps.ts",[],"/var/www/html/src/pages/layouts/MainLayout/components/SideMenu/SideMenu.tsx",[],"/var/www/html/src/pages/layouts/MainLayout/components/NavBar/Navbar.tsx",[],"/var/www/html/src/services/AuthService.ts",[],"/var/www/html/src/services/AbstractService.ts",["98"],"import HttpClient from '../http/HttpClient';\nimport AuthorizationMiddleware from '../http/middleware/AuthorizationMiddleware';\n\nabstract class AbstractService {\n  protected client!: HttpClient;\n  /**\n   * Set here your default middleware\n   * @type {{authorization: *, ...}}\n   */\n  static defaultMiddleware = {\n    authorization: AuthorizationMiddleware,\n  };\n\n\n  /**\n   * Overwrite this setter for add custom middleware on child classes\n   * defined by key value, when key is a unique middleware name and value is a middleware function\n   * @returns {{}}\n   */\n  get middleware() {\n    return {};\n  }\n\n  constructor() {\n    if (this.constructor.name === AbstractService.name) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n    this._setHttpClient();\n    this._applyMiddleware();\n  }\n\n  /**\n   * This method merge default and custom middleware for create a single middleware list\n   * @returns {unknown[]}\n   * @private\n   */\n  _getMiddleware() {\n    return Object.values({\n      ...AbstractService.defaultMiddleware,\n      ...this.middleware,\n    });\n  }\n\n  _setHttpClient() {\n    this.client = new HttpClient();\n  }\n\n  /**\n   * Apply middleware\n   * @private\n   */\n  _applyMiddleware() {\n    this._getMiddleware().map(middleware => {\n      this.client.axios.interceptors.request.use(middleware);\n    });\n  }\n}\n\nexport default AbstractService;\n","/var/www/html/src/http/HttpClient.ts",["99"],"import {AxiosRequestConfig, AxiosInstance} from 'axios';\nimport AxiosBuilder from './AxiosBuilder';\n\nclass HttpClient {\n  public axios: AxiosInstance;\n\n  /**\n   * @param config {AxiosRequestConfig}\n   */\n  constructor(config = {}) {\n    this.axios = AxiosBuilder.build(config);\n  }\n\n  /**\n   * Make a GET request\n   * @param url\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  get(url: string, conf = {}): Promise<any> {\n    return this.axios\n      .get(url, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n\n  /**\n   * Make a POST request\n   * @param url\n   * @param data\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  post(url: string, data = {}, conf = {}): Promise<any> {\n    return this.axios\n      .post(url, data, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n\n  /**\n   * Make a PUT request\n   * @param url\n   * @param data\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  put(url: string, data = {}, conf = {}): Promise<any> {\n    return this.axios\n      .put(url, data, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n\n  /**\n   * Make a PATCH request\n   * @param url\n   * @param data\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  patch(url: string, data = {}, conf = {}): Promise<any> {\n    return this.axios\n      .patch(url, data, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n\n  /**\n   * Make a DELETE request\n   * @param url\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  delete(url: string, conf = {}): Promise<any> {\n    return this.axios\n      .delete(url, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n\n  /**\n   * Make a HEAD request\n   * @param url\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  head(url: string, conf = {}): Promise<any> {\n    return this.axios\n      .head(url, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n\n  /**\n   * Make a OPTIONS request\n   * @param url\n   * @param conf {AxiosRequestConfig}\n   * @returns {Promise<any> | never>}\n   */\n  options(url: string, conf = {}): Promise<any> {\n    return this.axios\n      .options(url, conf)\n      .then(response => Promise.resolve(response.data))\n      .catch(error => Promise.reject(error.response));\n  }\n}\n\nexport default HttpClient;\n","/var/www/html/src/http/middleware/AuthorizationMiddleware.js",[],["100","101"],"/var/www/html/src/http/AxiosBuilder.ts",[],"/var/www/html/src/helpers/Auth.ts",[],"/var/www/html/src/store/auth/actions.ts",[],"/var/www/html/src/config/index.ts",[],"/var/www/html/src/store/auth/reducer.ts",[],"/var/www/html/src/pages/views/FakeView/FakeView.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":24},{"ruleId":"106","severity":1,"message":"110","line":2,"column":18,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":53,"column":42,"nodeType":"113","messageId":"114","endLine":53,"endColumn":44},{"ruleId":"106","severity":1,"message":"115","line":1,"column":9,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'ReactBreakpoints' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'AxiosRequestConfig' is defined but never used.","no-global-assign","no-unsafe-negation"]